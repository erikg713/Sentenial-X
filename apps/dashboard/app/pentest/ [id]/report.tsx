'use client';

import { useEffect, useState } from 'react';
import { useParams } from 'next/navigation';

interface Report {
  title: string;
  createdAt: string;
  status: 'completed' | 'running' | 'failed';
  riskScore: number;
  findings: string[];
  notes?: string;
}

export default function CampaignReportPage() {
  const params = useParams();
  const campaignId = params.id as string;

  const [report, setReport] = useState<Report | null>(null);

  useEffect(() => {
    fetch(`/api/pentest/campaigns/${campaignId}`)
      .then(res => res.json())
      .then(data => setReport(data));
  }, [campaignId]);

  if (!report) return <p className="p-8">Loading report...</p>;

  return (
    <main className="p-8">
      <h1 className="text-2xl font-bold mb-4">{report.title}</h1>
      <div className="bg-gray-100 p-4 rounded mb-4">
        <p>ðŸ•’ Created: <strong>{new Date(report.createdAt).toLocaleString()}</strong></p>
        <p>ðŸ“Š Risk Score: <strong>{(report.riskScore * 100).toFixed(0)}%</strong></p>
        <p>ðŸ”Ž Status: <strong>{report.status}</strong></p>
      </div>

      <section className="mb-6">
        <h2 className="text-lg font-semibold mb-2">Findings</h2>
        <ul className="list-disc pl-6">
          {report.findings.map((item, idx) => (
            <li key={idx}>{item}</li>
          ))}
        </ul>
      </section>

      {report.notes && (
        <section className="mb-6">
          <h2 className="text-lg font-semibold mb-2">Analyst Notes</h2>
          <p className="bg-white p-4 rounded shadow">{report.notes}</p>
        </section>
      )}
    </main>
  );
}

