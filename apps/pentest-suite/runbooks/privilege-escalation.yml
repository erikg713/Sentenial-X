---
# Privilege Escalation Runbook for Sentenial X Pentest Suite

name: Privilege Escalation Campaign
description: >
  Simulates privilege escalation techniques on compromised hosts to gain
  administrative or root-level access.

stages:
  - name: Enumeration
    description: >
      Perform system enumeration to identify possible privilege escalation vectors.
    target: compromised_host
    tools:
      - name: enum_scripts.py
        type: script
        path: ../../exploits/enum_scripts.py
    parameters:
      os_type: auto
    post_actions:
      - analyze_enum_results

  - name: Linux Exploit
    description: >
      Attempt Linux-specific privilege escalation using known kernel exploits or misconfigurations.
    target: compromised_host
    prerequisites:
      - Enumeration
    tools:
      - name: linux_escalate.py
        type: script
        path: ../../exploits/linux_escalate.py
    parameters:
      exploit_timeout: 60
    post_actions:
      - verify_root_access
      - clean_temp_files

  - name: Windows Exploit
    description: >
      Attempt Windows-specific privilege escalation using local exploits or token impersonation.
    target: compromised_host
    prerequisites:
      - Enumeration
    tools:
      - name: windows_escalate.py
        type: script
        path: ../../exploits/windows_escalate.py
    parameters:
      exploit_timeout: 60
    post_actions:
      - verify_admin_access
      - clean_temp_files

verification_steps:
  - name: analyze_enum_results
    action: parse
    file: "./session_data/enum_results.json"
    criteria:
      suspicious_suid: true
      writable_configs: true

  - name: verify_root_access
    command: "id -u"
    expected_output: "0"

  - name: verify_admin_access
    command: "net session"
    expected_output_contains: "Active Sessions"

  - name: clean_temp_files
    command: "rm -rf /tmp/escalate_*"

notes:
  - Ensure exploits are tested in controlled environments to avoid crashes.
  - Log all commands and outputs for auditing.
  - Prioritize safer escalation methods before kernel exploits.
  - Consider using token impersonation on Windows before destructive techniques.

