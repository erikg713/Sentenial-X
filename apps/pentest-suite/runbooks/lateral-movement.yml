---
# Lateral Movement Runbook for Sentenial X Pentest Suite

name: Lateral Movement Campaign
description: >
  Simulates an attacker moving laterally through a corporate network
  by leveraging harvested credentials and exploiting SMB/WinRM services.

stages:
  - name: Credential Harvesting
    description: >
      Extract credentials from compromised hosts using Mimikatz or equivalent tools.
    target: compromised_host
    tools:
      - name: mimikatz_tool.py
        type: script
        path: ../../exploits/mimikatz_tool.py
    parameters:
      dump_secrets: true
    post_actions:
      - store_credentials

  - name: SMB Exploitation
    description: >
      Use harvested credentials to access SMB shares on target hosts.
    target: target_host
    prerequisites:
      - Credential Harvesting
    tools:
      - name: smbclient_exploit.py
        type: script
        path: ../../exploits/smbclient_exploit.py
    parameters:
      username: "{{ harvested_username }}"
      password: "{{ harvested_password }}"
      share_name: "C$"
    post_actions:
      - verify_access

  - name: WinRM Exploitation
    description: >
      Use harvested credentials to run remote commands via WinRM.
    target: target_host
    prerequisites:
      - Credential Harvesting
    tools:
      - name: winrm_executor.py
        type: script
        path: ../../exploits/winrm_executor.py
    parameters:
      username: "{{ harvested_username }}"
      password: "{{ harvested_password }}"
      command: "whoami"
    post_actions:
      - verify_command_execution

  - name: Persistence
    description: >
      Install persistence mechanisms on target hosts to maintain access.
    target: target_host
    prerequisites:
      - SMB Exploitation
      - WinRM Exploitation
    tools:
      - name: persistence_installer.sh
        type: script
        path: ../../exploits/persistence_installer.sh
    parameters:
      method: "scheduled_task"
      task_name: "System Update"
    post_actions:
      - verify_persistence

verification_steps:
  - name: store_credentials
    action: save
    location: "./session_data/credentials.json"

  - name: verify_access
    command: "dir \\\\target_host\\C$"
    expected_output_contains: "Program Files"

  - name: verify_command_execution
    command: "winrm -hostname target_host -u {{ harvested_username }} -p {{ harvested_password }} whoami"
    expected_output_contains: "{{ harvested_username }}"

  - name: verify_persistence
    command: "schtasks /query /tn \"System Update\""
    expected_output_contains: "System Update"

notes:
  - Replace placeholders like `{{ harvested_username }}` with actual session variables.
  - Use encrypted storage for sensitive data like passwords.
  - Clean up after tests to reduce detection risks.
  - Log all output for auditing and analysis.

